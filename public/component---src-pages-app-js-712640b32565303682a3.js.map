{"version":3,"sources":["webpack:///./src/components/HintMessage/index.js","webpack:///./src/components/Input/index.js","webpack:///./src/client-side-routes/app/CreateScene/index.js","webpack:///./src/components/Card/index.js","webpack:///./src/client-side-routes/app/Scenes/index.js","webpack:///./src/components/Checkbox/index.js","webpack:///./src/client-side-routes/app/Scene/index.js","webpack:///./src/client-side-routes/app/Scene/types/ChromaKey/index.js","webpack:///./src/client-side-routes/app/Scene/types/Image/index.js","webpack:///./src/components/Message/index.js","webpack:///./src/client-side-routes/app/UpdatePassword/index.js","webpack:///./src/client-side-routes/app/Devices/index.js","webpack:///./src/pages/app.js"],"names":["HintMessage","isValid","successMessage","errorMessage","className","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Input","field","name","value","type","onChange","placeholder","CreateScene","auth","useAuth","JSON","stringify","Card","scene","src","alt","to","id","Scenes","db","firebase","firestore","useState","setScene","scenes","setScenes","useEffect","isAuthReady","collection","doc","uid","onSnapshot","querySnapshot","allScenes","forEach","snapshot","data","push","e","target","onClick","set","map","key","Checkbox","checked","children","strokeMiterlimit","fontFamily","fontWeight","fontSize","textAnchor","FRAME_TYPES","chromakey","label","image","frameTypes","Object","keys","FrameComponents","frame","sceneId","color","showMarkers","settings","setSettings","newValue","onBlur","toLowerCase","update","Scene","frames","setFrames","arrFrames","frameType","CurrentComp","Message","message","role","xmlns","UpdatePassword","success","setSuccess","error","setError","currentPassword","newPassword","passwordConfirm","form","setForm","updatePassword","a","preventDefault","user","currentUser","credential","EmailAuthProvider","email","reauthenticateWithCredential","catch","code","then","length","Devices","device","setDevice","ShowEmailNotification","isAuth","navigate","resendEmailVerification","emailVerified","App","Layout","app","basepath","path"],"mappings":"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","file":"component---src-pages-app-js-712640b32565303682a3.js","sourcesContent":["import React from \"react\";\r\n\r\nconst HintMessage = ({\r\n  isValid = false,\r\n  successMessage = \"\",\r\n  errorMessage = \"\",\r\n}) => {\r\n  return (\r\n    <li className=\"flex items-center py-1\">\r\n      <div\r\n        className={`rounded-full p-1 fill-current ${\r\n          isValid ? \"bg-green-200 text-green-700\" : \"bg-red-200 text-red-700\"\r\n        }`}\r\n      >\r\n        <svg\r\n          className=\"w-4 h-4\"\r\n          fill=\"none\"\r\n          viewBox=\"0 0 24 24\"\r\n          stroke=\"currentColor\"\r\n        >\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth=\"2\"\r\n            d=\"M5 13l4 4L19 7\"\r\n          />\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth=\"2\"\r\n            d=\"M6 18L18 6M6 6l12 12\"\r\n          />\r\n        </svg>\r\n      </div>\r\n      <span\r\n        className={`font-medium text-sm ml-3 ${\r\n          isValid ? \"text-green-700\" : \"text-red-700\"\r\n        }`}\r\n      >\r\n        {isValid ? successMessage : errorMessage}\r\n      </span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default HintMessage;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ field, name, value, type, onChange, placeholder = \"\" }) => {\r\n  return (\r\n    <div className=\"py-1\">\r\n      <span className=\"px-1 text-sm text-gray-600\">{field}</span>\r\n      <input\r\n        name={name}\r\n        onChange={onChange}\r\n        value={value}\r\n        placeholder={placeholder}\r\n        type={type}\r\n        className=\"text-md block px-3 py-2 rounded-lg w-full bg-white border-2 border-gray-300 placeholder-gray-600 shadow-md focus:placeholder-gray-500 focus:bg-white focus:border-gray-600 focus:outline-none\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport { useAuth } from \"../../../lib/AuthContext\";\r\n\r\nconst CreateScene = () => {\r\n  const auth = useAuth();\r\n\r\n  return <pre>{JSON.stringify(auth, null, 2)}</pre>;\r\n};\r\n\r\nexport default CreateScene;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\n\r\nexport default function Card({ scene }) {\r\n  return (\r\n    <div className=\"max-w-sm rounded overflow-hidden shadow-lg\">\r\n      <img\r\n        className=\"w-full\"\r\n        src=\"https://source.unsplash.com/random/384x234\"\r\n        alt=\"Sunset in the mountains\"\r\n      />\r\n      <div className=\"px-6 py-4\">\r\n        <div className=\"font-bold text-xl mb-2\">\r\n          <Link className=\"hover:underline\" to={`/app/scene/${scene.id}`}>\r\n            {scene.name}\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport firebase from \"../../../lib/firebase\";\r\nimport { useAuth } from \"../../../lib/AuthContext\";\r\nimport Input from \"../../../components/Input\";\r\nimport Card from \"../../../components/Card\";\r\n\r\nconst Scenes = () => {\r\n  const auth = useAuth();\r\n  const db = firebase.firestore();\r\n  const [scene, setScene] = useState(\"\");\r\n  const [scenes, setScenes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (auth.isAuthReady) {\r\n      db.collection(\"scenes\")\r\n        .doc(auth.uid)\r\n        .collection(\"scenes\")\r\n        .onSnapshot((querySnapshot) => {\r\n          let allScenes = [];\r\n          querySnapshot.forEach((snapshot) => {\r\n            const scene = snapshot.data();\r\n            const id = snapshot.id;\r\n            allScenes.push({ id, ...scene });\r\n          });\r\n          setScenes(allScenes);\r\n        });\r\n    }\r\n  }, [db, auth]);\r\n\r\n  const createScene = () => {\r\n    const newSceneRef = db\r\n      .collection(\"scenes\")\r\n      .doc(auth.uid)\r\n      .collection(\"scenes\")\r\n      .doc();\r\n    newSceneRef.set({ name: scene });\r\n    setScene(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mx-auto max-w-lg mb-12\">\r\n        <Input\r\n          field=\"Scene Name\"\r\n          name=\"scene\"\r\n          onChange={(e) => setScene(e.target.value)}\r\n          value={scene}\r\n          type=\"text\"\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          onClick={createScene}\r\n          className=\"mt-3 text-lg font-semibold bg-gray-800 w-full text-white rounded-lg px-6 py-3 block shadow-xl hover:text-white hover:bg-black\"\r\n        >\r\n          Create Scene\r\n        </button>\r\n      </div>\r\n      <div className=\"grid grid-cols-3\">\r\n        {scenes.map((scene) => (\r\n          <Card key={scene.id} scene={scene} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scenes;\r\n","import React from \"react\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport default function Checkbox({ name, value, checked, onChange, children }) {\r\n  return (\r\n    <label className=\"custom-label flex\">\r\n      <div className=\"bg-white shadow w-6 h-6 p-1 flex justify-center items-center mr-2\">\r\n        <input\r\n          name={name}\r\n          type=\"checkbox\"\r\n          value={value}\r\n          className=\"hidden\"\r\n          checked={checked}\r\n          onChange={onChange}\r\n        />\r\n        <svg\r\n          className=\"hidden w-4 h-4 text-green-600 pointer-events-none\"\r\n          viewBox=\"0 0 172 172\"\r\n        >\r\n          <g\r\n            fill=\"none\"\r\n            strokeWidth=\"none\"\r\n            strokeMiterlimit=\"10\"\r\n            fontFamily=\"none\"\r\n            fontWeight=\"none\"\r\n            fontSize=\"none\"\r\n            textAnchor=\"none\"\r\n            /* style=\"mix-blend-mode:normal\" */\r\n          >\r\n            <path d=\"M0 172V0h172v172z\" />\r\n            <path\r\n              d=\"M145.433 37.933L64.5 118.8658 33.7337 88.0996l-10.134 10.1341L64.5 139.1341l91.067-91.067z\"\r\n              fill=\"currentColor\"\r\n              strokeWidth=\"1\"\r\n            />\r\n          </g>\r\n        </svg>\r\n      </div>\r\n      <span className=\"select-none\">{children}</span>\r\n    </label>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport firebase from \"../../../lib/firebase\";\r\nimport { useAuth } from \"../../../lib/AuthContext\";\r\nimport ChromaKey from \"./types/ChromaKey\";\r\nimport Image from \"./types/Image\";\r\n\r\nconst FRAME_TYPES = {\r\n  chromakey: { key: \"chromakey\", label: \"Add chromakey\" },\r\n  image: { key: \"image\", label: \"Add image\" },\r\n};\r\n\r\nconst frameTypes = Object.keys(FRAME_TYPES);\r\n\r\nconst FrameComponents = {\r\n  [FRAME_TYPES.chromakey.key]: ChromaKey,\r\n  [FRAME_TYPES.image.key]: Image,\r\n};\r\n\r\nexport default function Scene({ sceneId }) {\r\n  const auth = useAuth();\r\n  const [scene, setScene] = useState({});\r\n  const [frames, setFrames] = useState([]);\r\n  const db = firebase.firestore();\r\n\r\n  useEffect(() => {\r\n    if (auth.isAuthReady) {\r\n      db.collection(\"scenes\")\r\n        .doc(auth.uid)\r\n        .collection(\"scenes\")\r\n        .doc(sceneId)\r\n        .onSnapshot((snapshot) => {\r\n          const scene = snapshot.data();\r\n          const id = snapshot.id;\r\n          setScene({ id, ...scene });\r\n        });\r\n      db.collection(\"frames\")\r\n        .doc(auth.uid)\r\n        .collection(sceneId)\r\n        .onSnapshot((querySnapshot) => {\r\n          let arrFrames = [];\r\n          querySnapshot.forEach((snapshot) => {\r\n            const scene = snapshot.data();\r\n            const id = snapshot.id;\r\n            arrFrames.push({ id, ...scene });\r\n          });\r\n\r\n          setFrames(arrFrames);\r\n        });\r\n    }\r\n  }, [db, auth, sceneId]);\r\n\r\n  const createFrame = (type) => {\r\n    const frameRef = db\r\n      .collection(\"frames\")\r\n      .doc(auth.uid)\r\n      .collection(sceneId)\r\n      .doc();\r\n    frameRef.set({ type });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>{scene.name}</h1>\r\n      <div className=\"grid grid-cols-3 gap-4\">\r\n        {frameTypes.map((frameType) => (\r\n          <div\r\n            key={frameType}\r\n            className=\"text-center p-4 bg-white hover:bg-gray-100 h-32 w-32 shadow-md rounded flex items-end\"\r\n          >\r\n            <button onClick={() => createFrame(FRAME_TYPES[frameType].key)}>\r\n              <span>{FRAME_TYPES[frameType].label}</span>\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {frames.map((frame) => {\r\n        const CurrentComp = FrameComponents[frame.type];\r\n        return (\r\n          <CurrentComp\r\n            key={frame.id}\r\n            id={frame.id}\r\n            frame={frame}\r\n            uid={auth.uid}\r\n            sceneId={sceneId}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport firebase from \"../../../../../lib/firebase\";\r\nimport Checkbox from \"../../../../../components/Checkbox\";\r\n\r\nexport default function ChromaKey({ id, frame, uid, sceneId }) {\r\n  const db = firebase.firestore();\r\n  const [settings, setSettings] = useState({\r\n    color: \"green\",\r\n    showMarkers: false,\r\n  });\r\n\r\n  const onChange = ({ target }) => {\r\n    const { name, value, checked, type } = target;\r\n    const newValue = type === \"checkbox\" ? checked : value;\r\n    setSettings({ ...settings, [name]: newValue });\r\n  };\r\n\r\n  const save = () => {\r\n    const frameRef = db\r\n      .collection(\"frames\")\r\n      .doc(uid)\r\n      .collection(sceneId)\r\n      .doc(id);\r\n    frameRef.update({ settings });\r\n  };\r\n\r\n  return (\r\n    <div className=\"border-solid border-gray-200 border-2 m-8 p-8\">\r\n      <h1 className=\"font-bold\">ChromaKey</h1>\r\n\r\n      <div className=\"w-full\">\r\n        <div className=\"my-2 bg-white p-1 flex border border-gray-200 rounded\">\r\n          <select\r\n            name=\"color\"\r\n            value={settings.color}\r\n            onChange={onChange}\r\n            onBlur={onChange}\r\n            className=\"p-1 px-2 appearance-none outline-none w-full text-gray-800\"\r\n          >\r\n            {[\"Red\", \"Green\", \"Blue\"].map((value) => (\r\n              <option key={value.toLowerCase()} value={value.toLowerCase()}>\r\n                {value}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <Checkbox\r\n        name=\"showMarkers\"\r\n        type=\"checkbox\"\r\n        value={settings.showMarkers}\r\n        checked={settings.showMarkers}\r\n        onChange={onChange}\r\n      >\r\n        Show tracking markers\r\n      </Checkbox>\r\n      <button\r\n        type=\"button\"\r\n        onClick={save}\r\n        className=\"mt-3 text-lg font-semibold bg-gray-800 w-full text-white rounded-lg px-6 py-3 block shadow-xl hover:text-white hover:bg-black\"\r\n      >\r\n        Save\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport firebase from \"../../../../../lib/firebase\";\r\n\r\nexport default function Image({ id, frame, uid, sceneId }) {\r\n  const db = firebase.firestore();\r\n  const [settings, setSettings] = useState({\r\n    color: \"green\",\r\n    showMarkers: false,\r\n  });\r\n\r\n  const onChange = ({ target }) => {\r\n    const { name, value, checked, type } = target;\r\n    const newValue = type === \"checkbox\" ? checked : value;\r\n    setSettings({ ...settings, [name]: newValue });\r\n  };\r\n\r\n  const save = () => {\r\n    const frameRef = db\r\n      .collection(\"frames\")\r\n      .doc(uid)\r\n      .collection(sceneId)\r\n      .doc(id);\r\n    frameRef.update({ settings });\r\n  };\r\n\r\n  return (\r\n    <div className=\"border-solid border-gray-200 border-2 m-8 p-8\">\r\n      <h1 className=\"font-bold\">Image</h1>\r\n      <select\r\n        name=\"color\"\r\n        value={settings.color}\r\n        onChange={onChange}\r\n        onBlur={onChange}\r\n      >\r\n        {[\"Red\", \"Green\", \"Blue\"].map((value) => (\r\n          <option key={value.toLowerCase()} value={value.toLowerCase()}>\r\n            {value}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <label>\r\n        <input\r\n          name=\"showMarkers\"\r\n          type=\"checkbox\"\r\n          value={settings.showMarkers}\r\n          checked={settings.showMarkers}\r\n          onChange={onChange}\r\n        />\r\n        Show tracking markers\r\n      </label>\r\n      <button\r\n        type=\"button\"\r\n        onClick={save}\r\n        className=\"mt-3 text-lg font-semibold bg-gray-800 w-full text-white rounded-lg px-6 py-3 block shadow-xl hover:text-white hover:bg-black\"\r\n      >\r\n        Save\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Message({ type, message }) {\r\n  if (type === \"success\") {\r\n    return (\r\n      <div\r\n        className=\"bg-teal-100 border-t-4 border-teal-500 rounded-b text-teal-900 px-4 py-3 shadow-md\"\r\n        role=\"alert\"\r\n      >\r\n        <div className=\"flex\">\r\n          <div className=\"py-1\">\r\n            <svg\r\n              className=\"fill-current h-6 w-6 text-teal-500 mr-4\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 20 20\"\r\n            >\r\n              <path d=\"M2.93 17.07A10 10 0 1 1 17.07 2.93 10 10 0 0 1 2.93 17.07zm12.73-1.41A8 8 0 1 0 4.34 4.34a8 8 0 0 0 11.32 11.32zM9 11V9h2v6H9v-4zm0-6h2v2H9V5z\" />\r\n            </svg>\r\n          </div>\r\n          <div>\r\n            <p className=\"font-bold\">{message}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport firebase from \"../../../lib/firebase\";\r\nimport { useAuth } from \"../../../lib/AuthContext\";\r\nimport HintMessage from \"../../../components/HintMessage\";\r\nimport Input from \"../../../components/Input\";\r\nimport Message from \"../../../components/Message\";\r\n\r\nconst UpdatePassword = () => {\r\n  const auth = useAuth();\r\n  const [success, setSuccess] = useState(false);\r\n  const [error, setError] = useState({ message: \"\" });\r\n  const [form, setForm] = useState({\r\n    currentPassword: \"\",\r\n    newPassword: \"\",\r\n    passwordConfirm: \"\",\r\n  });\r\n\r\n  const updatePassword = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const user = firebase.auth().currentUser;\r\n\r\n    const credential = firebase.auth.EmailAuthProvider.credential(\r\n      auth.email,\r\n      form.currentPassword\r\n    );\r\n\r\n    await user\r\n      .reauthenticateWithCredential(credential)\r\n      .catch(({ code, message }) => setError({ code, message }));\r\n\r\n    await user\r\n      .updatePassword(form.newPassword)\r\n      .then(() => setSuccess(true))\r\n      .catch(({ code, message }) => setError({ code, message }));\r\n  };\r\n\r\n  const onChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    setForm({ ...form, [name]: value });\r\n  };\r\n\r\n  const { currentPassword, newPassword, passwordConfirm } = form;\r\n\r\n  return (\r\n    <div className=\"container max-w-full mx-auto md:py-24 px-6\">\r\n      <div className=\"max-w-sm mx-auto px-6\">\r\n        <div className=\"relative flex flex-wrap\">\r\n          <div className=\"w-full relative\">\r\n            <div className=\"md:mt-6\">\r\n              {success && (\r\n                <Message type=\"success\" message=\"Password changed.\" />\r\n              )}\r\n\r\n              {!success && (\r\n                <>\r\n                  <div className=\"text-center font-semibold text-black\">\r\n                    Change Password\r\n                  </div>\r\n                  <form className=\"mt-8\">\r\n                    <div className=\"mx-auto max-w-lg\">\r\n                      <Input\r\n                        field=\"Current Password\"\r\n                        name=\"currentPassword\"\r\n                        onChange={onChange}\r\n                        value={currentPassword}\r\n                        type=\"password\"\r\n                      />\r\n                      <Input\r\n                        field=\"New Password\"\r\n                        name=\"newPassword\"\r\n                        onChange={onChange}\r\n                        value={newPassword}\r\n                        type=\"password\"\r\n                      />\r\n                      <Input\r\n                        field=\"Confirm Password\"\r\n                        name=\"passwordConfirm\"\r\n                        onChange={onChange}\r\n                        value={passwordConfirm}\r\n                        type=\"password\"\r\n                      />\r\n\r\n                      <div className=\"flex justify-start mt-3 ml-4 p-1\">\r\n                        <ul>\r\n                          <HintMessage\r\n                            isValid={\r\n                              newPassword === passwordConfirm &&\r\n                              newPassword.length > 0\r\n                            }\r\n                            successMessage=\"Passwords match\"\r\n                            errorMessage=\"Passwords do not match\"\r\n                          />\r\n                          <HintMessage\r\n                            isValid={newPassword.length > 7}\r\n                            successMessage=\"The minimum length is reached\"\r\n                            errorMessage=\"At least 8 characters required\"\r\n                          />\r\n\r\n                          {error.message && (\r\n                            <HintMessage errorMessage={error.message} />\r\n                          )}\r\n                        </ul>\r\n                      </div>\r\n\r\n                      <button\r\n                        type=\"submit\"\r\n                        onClick={updatePassword}\r\n                        className=\"mt-3 text-lg font-semibold bg-gray-800 w-full text-white rounded-lg px-6 py-3 block shadow-xl hover:text-white hover:bg-black\"\r\n                      >\r\n                        Change Password\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdatePassword;\r\n","import React, { useState } from \"react\";\r\nimport firebase from \"../../../lib/firebase\";\r\nimport { useAuth } from \"../../../lib/AuthContext\";\r\nimport Input from \"../../../components/Input\";\r\n\r\nexport default function Devices() {\r\n  const auth = useAuth();\r\n  const db = firebase.firestore();\r\n  const [device, setDevice] = useState(\"\");\r\n\r\n  const createDevice = () => {\r\n    const deviceRef = db\r\n      .collection(\"scenes\")\r\n      .doc(auth.uid)\r\n      .collection(\"scenes\")\r\n      .doc();\r\n    deviceRef.set({ device });\r\n    setDevice(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"mx-auto max-w-lg mb-12\">\r\n      <Input\r\n        field=\"Device Id\"\r\n        name=\"deviceId\"\r\n        onChange={(e) => setDevice(e.target.value)}\r\n        value={device}\r\n        type=\"text\"\r\n      />\r\n      <button\r\n        type=\"button\"\r\n        onClick={createDevice}\r\n        className=\"mt-3 text-lg font-semibold bg-gray-800 w-full text-white rounded-lg px-6 py-3 block shadow-xl hover:text-white hover:bg-black\"\r\n      >\r\n        Create Device\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Router } from \"@reach/router\";\r\nimport { navigate } from \"gatsby\";\r\nimport { useAuth } from \"../lib/AuthContext\";\r\nimport Layout from \"../components/Layout\";\r\nimport CreateScenes from \"../client-side-routes/app/CreateScene\";\r\nimport Scenes from \"../client-side-routes/app/Scenes\";\r\nimport Scene from \"../client-side-routes/app/Scene\";\r\nimport UpdatePassword from \"../client-side-routes/app/UpdatePassword\";\r\nimport Devices from \"../client-side-routes/app/Devices\";\r\n\r\nconst ShowEmailNotification = () => {\r\n  const auth = useAuth();\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (auth.isAuthReady && !auth.isAuth) navigate(\"/sign-in\");\r\n  }, [auth]);\r\n\r\n  const resendEmailVerification = async () => {\r\n    try {\r\n      await auth.resendEmailVerification();\r\n    } catch (error) {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  if (!auth.emailVerified) {\r\n    return (\r\n      <div className=\"bg-orange-200 p-4\">\r\n        <p className=\"container mx-auto text-center\">\r\n          Please, confirm your email address ({auth.email}). <br />\r\n          <button onClick={resendEmailVerification}>\r\n            Click here to resend email confirmation. <br />\r\n          </button>\r\n          {error ? (\r\n            <span>Error, try again in few minutes.</span>\r\n          ) : (\r\n            <span>\r\n              Verification e-mail sent. Please, check your inbox and follow the\r\n              instructions.\r\n            </span>\r\n          )}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst App = () => {\r\n  return (\r\n    <Layout app>\r\n      <ShowEmailNotification />\r\n      <div className=\"container mx-auto mt-12\">\r\n        <Router basepath=\"/app\">\r\n          <Scenes path=\"/\" />\r\n          <Scene path=\"/scene/:sceneId\" />\r\n          <CreateScenes path=\"/create-scenes\" />\r\n          <UpdatePassword path=\"/update-password\" />\r\n          <Devices path=\"/devices\" />\r\n        </Router>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"sourceRoot":""}